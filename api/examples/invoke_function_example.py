from api.main import llm_provider
from api.shield_net.decorators import shield_net
from api.utils import prepare_messages

@shield_net
def invoke_function(system_prompt: str, prompt: str) -> str:
    """
    Invokes a function that prepares and processes messages to an LLM provider.

    This function combines the given `system_prompt` and `prompt` to create a set of messages,
    then sends them to the LLM provider for processing, and returns the resulting output.

    Parameters:
    - system_prompt (str): The system-level prompt to guide the LLM's behavior.
    - prompt (str): The user-level prompt for the LLM to process and respond to.

    Returns:
    - str: The output generated by the LLM based on the provided prompts.

    Example:
    >>> invoke_function("System: Please process the input", "What is the capital of France?")
    'The capital of France is Paris.'
    """
    # Prepare the messages by combining the system and user prompts
    messages = prepare_messages(system_prompt, prompt)

    # Invoke the LLM provider to get the content output
    content_output = llm_provider.invoke_llm(messages)

    return content_output
